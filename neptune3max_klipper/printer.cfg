[include shell_command.cfg]
[include moonraker_obico_macros.cfg]
# For the ZNP Robin Nano DW v2.2 board:
#   - Compile with the processor model STM32F401.
#   - Select the 32KiB bootloader,
#   - Select (Serial (on # USART1 PA10/PA9) for the communication interface.
#   - Select (Serial (on # USART2 PA3/PA2) if you want to use the serial UART pins on J17 (wifi section)
# Note that the "make flash" command does not work with ZNP Robin boards. After running "make", run the following command:
# cp out/klipper.bin out/ZNP_ROBIN_NANO.bin
#
# Copy the file out/ZNP_ROBIN_NANO.bin to an SD card and then restart the printer with that SD card.
# See docs/Config_Reference.md for a description of parameters.

[include timelapse.cfg]
[include mainsail.cfg]

[exclude_object] #comment out for Sonic pad
[virtual_sdcard]
path: /home/admin/printer_data/gcodes

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
    
[gcode_macro MANUAL_LEVEL]
description: Home and measure for maunual leveling adjustments
gcode:
  G28
  SCREWS_TILT_CALCULATE
  G90
  G1 F3000 X213 Y213 Z25 

[mcu]
serial: /dev/ttyUSB0
restart_method: command

[led LED_Light]
white_pin: PB9
initial_white: 1.0

#[output_pin LED_Light] #toggle for LED Light - use this instead of [LED] for sonic pad
#Pin: PB9
#cycle_time: 0.01
#pwm: true
#value: 1

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3700
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 5
# Use those higher values just to configure Input Shaper 
#max_accel: 10000
#max_accel_to_decel: 10000

[stepper_x]
step_pin: !PC12
dir_pin: PB3
enable_pin: !PD2
microsteps: 16
rotation_distance: 40
endstop_pin: PA13
position_endstop: 0
position_max: 427
homing_speed: 100

[stepper_y]
step_pin: PC11
dir_pin: PA15
enable_pin: !PC10
microsteps: 16
rotation_distance: 40
endstop_pin: PB8
position_endstop: -7
position_min: -7
position_max: 427
homing_speed: 50

[stepper_z]
step_pin: PC7
dir_pin: !PC9
enable_pin: !PC8
rotation_distance: 8
microsteps: 16
position_min: -2
position_max: 510
endstop_pin: probe:z_virtual_endstop # Use Z- as endstop
homing_speed: 10
homing_retract_speed: 15


[extruder]
max_extrude_only_distance: 100.0
step_pin: PB10
dir_pin: PB1
enable_pin: !PC6
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 250
# Calibrate E-Steps https://www.klipper3d.org/Rotation_Distance.html#calibrating-rotation_distance-on-extruders
rotation_distance: 7.65
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#  - Example: PID_CALIBRATE HEATER=extruder TARGET=200
control = pid
pid_kp = 23.847
pid_ki = 1.325
pid_kd = 107.311
# Calibrate PA: https://www.klipper3d.org/Pressure_Advance.html
#pressure_advance = 0.600

[heater_bed]
heater_pin: PA5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
pwm_cycle_time: 0.020 # set to 0.0166 if your grid runs on 60Hz to fix lights flickering
max_temp: 110
min_temp: 0
# Calibrate PID: https://www.klipper3d.org/Config_checks.html#calibrate-pid-settings
#  - Example: PID_CALIBRATE HEATER=heater_bed TARGET=60
control = pid
pid_kp = 71.562
pid_ki = 0.778
pid_kd = 1645.031

[heater_fan hotend_fan]
pin: PB0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA7

[force_move]
enable_force_move: True

[safe_z_home]
speed: 100.0
home_xy_position: 241, 193
z_hop: 10

[probe]
pin: ^PA8
speed: 5
lift_speed: 15
samples: 3
x_offset: -28
y_offset: 20
# Calibrate probe: https://www.klipper3d.org/Bed_Level.html
# - Example: PROBE_CALIBRATE, then adjust with TESTZ Z=+/-X
z_offset = 1.75

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: PB4

[bed_mesh]
probe_count = 10,10
algorithm = bicubic
speed: 200
horizontal_move_z: 10
mesh_min: 5, 13
mesh_max: 399, 421
fade_start: 1.0
fade_end: 10.0

[input_shaper]
# Calibrate IS: https://www.klipper3d.org/Resonance_Compensation.html
shaper_type_x = ei
shaper_freq_x = 62.0
shaper_type_y = zv
shaper_freq_y = 31.6
#Slower but slightly less vibration option (change max accel to 2800)
#shaper_type_y = mzv
#shaper_freq_y = 31.0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
#min_temp: 10
#max_temp: 105

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
sensor_temperature1: 25
sensor_adc1: 0.210317
#min_temp: 0
#max_temp: 105

[gcode_macro M420]
description: Load the current mesh
gcode:
  BED_MESH_PROFILE LOAD=default
  
[gcode_macro G29]
description: creates automated homing and bed mesh
gcode:
  G28
  BED_MESH_CALIBRATE
  DATA_SAVE
  
[screws_tilt_adjust]
screw_thread: CW-M3
speed: 200
screw1: 241, 193
screw1_name: center
screw2: 419, 371
screw2_name: right back screw
screw3: 419, 193
screw3_name: right middle screw
screw4: 419, 15
screw4_name: right front screw
screw5: 63, 15
screw5_name: left front screw
screw6: 63, 193
screw6_name: left middle screw
screw7: 63, 371
screw7_name: left back screw

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/admin/printer_data/klipper-backup/script.sh
timeout: 90.0
verbose: True

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.086667, -0.056667, -0.082500, -0.222500, -0.252500, -0.270833, -0.283333, -0.250833, -0.171667, -0.081667
#*# 	  0.097500, 0.011667, -0.068333, -0.175000, -0.208333, -0.241667, -0.237500, -0.185833, -0.090000, -0.065000
#*# 	  0.252500, 0.154167, 0.056667, -0.040833, -0.078333, -0.107500, -0.110000, -0.055833, 0.025000, 0.068333
#*# 	  0.393333, 0.271667, 0.164167, 0.069167, 0.032500, -0.002500, -0.010000, 0.028333, 0.122500, 0.180000
#*# 	  0.465000, 0.340833, 0.204167, 0.101667, 0.060000, -0.000833, -0.002500, 0.037500, 0.130000, 0.189167
#*# 	  0.443333, 0.324167, 0.183333, 0.068333, 0.006667, -0.043333, -0.045000, 0.000000, 0.100000, 0.156667
#*# 	  0.373333, 0.249167, 0.104167, -0.025000, -0.092500, -0.150000, -0.147500, -0.109167, -0.021667, 0.034167
#*# 	  0.265000, 0.142500, -0.007500, -0.129167, -0.197500, -0.263333, -0.272500, -0.238333, -0.162500, -0.130833
#*# 	  0.133333, 0.005000, -0.132500, -0.247500, -0.312500, -0.375000, -0.402500, -0.381667, -0.338333, -0.328333
#*# 	  -0.275000, -0.297500, -0.432500, -0.567500, -0.595833, -0.675000, -0.718333, -0.742500, -0.724167, -0.765833
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 398.93
#*# min_y = 13.0
#*# max_y = 420.98
